name: Build & Deploy Pages

on:
  workflow_run:
    workflows: ["Scrape & Parse Events"]   # must match your scrape workflow's name
    types: [completed]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    # Only run after a successful scrape when triggered by workflow_run
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Pull artifacts from the triggering scrape (if any)
      - name: Download artifacts from scrape (if present)
        if: ${{ github.event_name == 'workflow_run' }}
        uses: dawidd6/action-download-artifact@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          path: downloaded
          if_no_artifact_found: ignore

      - name: Build static site
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p public/state public/ics

          # Prefer artifact copy of last_run_report.json
          ART_JSON="$(find downloaded -type f -name last_run_report.json -print -quit 2>/dev/null || true)"
          if [ -n "${ART_JSON:-}" ]; then
            echo "Using artifact ${ART_JSON}"
            cp "${ART_JSON}" public/state/last_run_report.json
          elif [ -f state/last_run_report.json ]; then
            echo "Using repo state/last_run_report.json"
            cp state/last_run_report.json public/state/last_run_report.json
          elif [ -f last_run_report.json ]; then
            echo "Using repo-root last_run_report.json"
            cp last_run_report.json public/state/last_run_report.json
          else
            echo "WARN: No last_run_report.json found; creating empty."
            printf '{}' > public/state/last_run_report.json
          fi

          # Copy ICS files if present
          for f in northwoods.ics northwoods-events.ics; do
            if [ -f "$f" ]; then cp "$f" public/ics/; fi
          done

          # Minimal index.html (no heredocs, no Python)
          BUILD_TIME="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          {
            printf '%s\n' '<!doctype html>'
            printf '%s\n' '<meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1">'
            printf '%s\n' '<title>Northwoods Events</title>'
            printf '%s\n' '<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:2rem}code{background:#f6f8fa;padding:.1rem .3rem;border-radius:.25rem}table{border-collapse:collapse;width:100%}th,td{border:1px solid #ddd;padding:.5rem;text-align:left}th{background:#f6f8fa}</style>'
            printf '%s\n' '<h1>Northwoods Events</h1>'
            printf '<p>Built: <code>%s</code></p>\n' "$BUILD_TIME"
            printf '%s\n' '<p><a href="./state/last_run_report.json">Download last_run_report.json</a></p>'
            printf '%s\n' '<div id="summary"></div>'
            printf '%s\n' '<script type="module">'
            printf '%s\n' 'async function main(){try{const r=await fetch("./state/last_run_report.json");const d=await r.json();const s=(d.sources||[]).slice(0,50);const rows=s.map(x=>`<tr><td>${x.name||""}</td><td>${x.parser_kind||""}</td><td>${x.parsed||0}</td><td>${x.added||0}</td></tr>`).join("");const html=`<h2>Latest sources (sample)</h2><table><thead><tr><th>Name</th><th>Parser</th><th>Parsed</th><th>Added</th></tr></thead><tbody>${rows||"<tr><td colspan=4><em>No data</em></td></tr>"}</tbody></table>`;document.getElementById("summary").innerHTML=html}catch(e){document.getElementById("summary").textContent=String(e)}}main();'
            printf '%s\n' '</script>'
          } > public/index.html

      - name: Show output tree (debug)
        shell: bash
        run: |
          echo "---- repo root ----"; ls -lah || true
          echo "---- downloaded (if any) ----"; ls -lah downloaded || true
          echo "---- public ----"; ls -lah public || true
          echo "---- public/state ----"; ls -lah public/state || true
          echo "---- public/ics ----"; ls -lah public/ics || true

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
