name: Build & Deploy Pages

on:
  workflow_run:
    workflows: ["Scrape & Parse Events"]   # must match the name in scrape.yml
    types: [completed]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Pull artifact from the triggering scrape run (if this was workflow_run)
      - name: Download artifacts from scrape (if present)
        if: ${{ github.event_name == 'workflow_run' }}
        uses: dawidd6/action-download-artifact@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          path: downloaded
          if_no_artifact_found: ignore

      - name: Build static site
        run: |
          set -euo pipefail
          mkdir -p public/state public/ics

          # Prefer artifact version of last_run_report.json
          ART_JSON="$(find downloaded -type f -name last_run_report.json -print -quit || true)"
          if [ -n "${ART_JSON:-}" ]; then
            echo "Using artifact ${ART_JSON}"
            cp "${ART_JSON}" public/state/last_run_report.json
          elif [ -f state/last_run_report.json ]; then
            echo "Using repo state/last_run_report.json"
            cp state/last_run_report.json public/state/last_run_report.json
          elif [ -f last_run_report.json ]; then
            echo "Using repo-root last_run_report.json"
            cp last_run_report.json public/state/last_run_report.json
          else
            echo "WARN: No last_run_report.json found."
            echo "{}" > public/state/last_run_report.json
          fi

          # Copy any ICS files if present
          for f in northwoods.ics northwoods-events.ics; do
            if [ -f "$f" ]; then cp "$f" public/ics/; fi
          done

          # Generate a tiny index.html via Python (avoids YAML heredoc pitfalls)
          python - <<'PY'
import json, os, datetime, glob, shutil
os.makedirs("public", exist_ok=True)
dt = datetime.datetime.utcnow().isoformat()+"Z"
report_path = "public/state/last_run_report.json"
try:
    data = json.load(open(report_path,"r",encoding="utf-8"))
except Exception as e:
    data = {"error": str(e)}
sources = data.get("sources", [])[:50]
rows = "\n".join(
    f"<tr><td>{s.get('name','')}</td><td>{s.get('parser_kind','')}</td><td>{s.get('parsed',0)}</td><td>{s.get('added',0)}</td></tr>"
    for s in sources
)
html = f"""<!doctype html>
<meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1">
<title>Northwoods Events</title>
<style>
  body {{ font-family: system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif; margin:2rem; }}
  code {{ background:#f6f8fa; padding:.1rem .3rem; border-radius:.25rem; }}
  table {{ border-collapse: collapse; width: 100%; }}
  th, td {{ border: 1px solid #ddd; padding: .5rem; text-align:left; }}
  th {{ background: #f6f8fa; }}
</style>
<h1>Northwoods Events</h1>
<p>Built: <code>{dt}</code></p>
<p><a href="./state/last_run_report.json">Download last_run_report.json</a></p>
<h2>Latest sources (sample)</h2>
<table>
  <thead><tr><th>Name</th><th>Parser</th><th>Parsed</th><th>Added</th></tr></thead>
  <tbody>{rows or '<tr><td colspan="4"><em>No data</em></td></tr>'}</tbody>
</table>
"""
open("public/index.html","w",encoding="utf-8").write(html)
PY

      - name: Show output tree (debug)
        run: |
          echo "---- repo root ----"; ls -lah || true
          echo "---- downloaded (if any) ----"; ls -lah downloaded || true
          echo "---- public ----"; ls -lah public || true
          echo "---- public/state ----"; ls -lah public/state || true
          echo "---- public/ics ----"; ls -lah public/ics || true

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
