name: "Build ICS & Deploy Pages"

on:
  schedule:
    - cron: "15 9 * * *"   # daily at 09:15 UTC
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

env:
  PYTHON_VERSION: "3.11"

jobs:
  build:
    name: "Build ICS & prepare site"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: "Install dependencies"
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests beautifulsoup4 lxml ics python-dateutil pytz pyyaml
          fi

      - name: "Show sources file(s) found"
        shell: bash
        run: |
          set -euo pipefail
          echo "Looking for sources.{yaml,yml} at repo root and in src/..."
          found=0
          for p in sources.yaml sources.yml src/sources.yaml src/sources.yml; do
            if [ -f "$p" ]; then
              echo " - found: $p"
              found=1
            fi
          done
          if [ $found -eq 0 ]; then
            echo "::warning::No sources.yaml/yml found at repo root or in src/."
          fi

      - name: "Run builder (src/main.py)"
        shell: bash
        env:
          TZ: America/Chicago
        run: |
          set -euo pipefail
          echo "Running: python src/main.py"
          python src/main.py
          echo
          echo "Outputs at repo root:"
          ls -la || true
          echo
          if [ -d state ]; then
            echo "state/ (top 200 files):"
            find state -type f | sed -n '1,200p'
          else
            echo "::warning::No state/ dir produced."
          fi
          if [ -f src/northwoods.ics ] && [ ! -f northwoods.ics ]; then
            cp src/northwoods.ics ./northwoods.ics
          fi
          if [ -f northwoods.ics ]; then
            echo "northwoods.ics present at repo root."
          else
            echo "::warning::northwoods.ics not found."
          fi

      - name: "Commit & push changes (if any)"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Daily update: ICS + state"
          git push

      - name: "Configure Pages"
        uses: actions/configure-pages@v5

      - name: "Build public site"
        shell: bash
        run: |
          set -euo pipefail
          rm -rf public
          mkdir -p public

          # Write public/index.html without heredocs (printf only)
          printf '%s\n' \
'<!doctype html>' \
'<meta charset="utf-8">' \
'<title>Northwoods Events - Artifacts</title>' \
'<h1>Northwoods Events - Artifacts</h1>' \
'<p>This page lists useful generated files from the repo.</p>' \
'<ul>' \
'  <li><a href="state/">state/ (snapshots, last_run_report.json)</a></li>' \
'  <li><a href="northwoods.ics">northwoods.ics (if present)</a></li>' \
'</ul>' \
'<hr>' \
'<p>Auto-published by GitHub Pages workflow.</p>' \
> public/index.html

          # Copy state/ if present
          if [ -d state ]; then
            mkdir -p public/state
            cp -a state/. public/state/
          fi

          # Copy ICS to site root if present
          if [ -f northwoods.ics ]; then
            cp northwoods.ics public/
          fi

          echo "Public artifact contents (top):"
          find public -maxdepth 3 -type f | sed -n '1,200p'

      - name: "Upload artifact (github-pages)"
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    name: "Deploy to GitHub Pages"
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: "Deploy"
        id: deployment
        uses: actions/deploy-pages@v4
