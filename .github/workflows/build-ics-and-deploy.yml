name: Build & Deploy Pages

on:
  workflow_run:
    workflows: ["Scrape & Parse Events"]   # MUST match the name above exactly
    types: [completed]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    # Only proceed if the triggering scrape concluded successfully
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Download artifact from the triggering scrape run
      - name: Download 'scrape-output' artifact
        if: ${{ github.event_name == 'workflow_run' }}
        uses: dawidd6/action-download-artifact@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          name: scrape-output
          path: downloaded
          if_no_artifact_found: warn

      - name: Build static site
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p public/state public/ics

          # Prefer artifact; fall back to repo if present
          if [ -f downloaded/state/last_run_report.json ]; then
            cp downloaded/state/last_run_report.json public/state/last_run_report.json
          elif [ -f state/last_run_report.json ]; then
            cp state/last_run_report.json public/state/last_run_report.json
          elif [ -f last_run_report.json ]; then
            cp last_run_report.json public/state/last_run_report.json
          else
            echo '{}' > public/state/last_run_report.json
          fi

          # Copy ICS files if present
          for f in downloaded/northwoods*.ics northwoods*.ics; do
            [ -f "$f" ] && cp "$f" public/ics/ || true
          done

          # Minimal index.html (kept simple to avoid YAML heredoc quirks)
          BUILD_TIME="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          {
            echo '<!doctype html><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1">'
            echo '<title>Northwoods Events</title>'
            echo '<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:2rem}table{border-collapse:collapse;width:100%}th,td{border:1px solid #ddd;padding:.5rem;text-align:left}th{background:#f6f8fa}</style>'
            echo "<h1>Northwoods Events</h1><p>Built: <code>${BUILD_TIME}</code></p>"
            echo '<p><a href="./state/last_run_report.json">Download last_run_report.json</a></p>'
            echo '<div id="tbl"></div>'
            echo '<script type="module">'
            echo 'fetch("./state/last_run_report.json").then(r=>r.json()).then(d=>{'
            echo ' const rows=(d.sources||[]).slice(0,50).map(s=>`<tr><td>${s.name||""}</td><td>${s.parser_kind||""}</td><td>${s.parsed||0}</td><td>${s.added||0}</td></tr>`).join("");'
            echo ' document.getElementById("tbl").innerHTML = `<h2>Latest sources (sample)</h2><table><thead><tr><th>Name</th><th>Parser</th><th>Parsed</th><th>Added</th></tr></thead><tbody>${rows||"<tr><td colspan=4><em>No data</em></td></tr>"}</tbody></table>`;'
            echo '}).catch(e=>{document.getElementById("tbl").innerHTML=`<pre>${String(e)}</pre>`});'
            echo '</script>'
          } > public/index.html

      - name: Show output tree (debug)
        run: |
          echo "---- public ----"; ls -lah public || true
          echo "---- public/state ----"; ls -lah public/state || true
          echo "---- public/ics ----"; ls -lah public/ics || true

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
