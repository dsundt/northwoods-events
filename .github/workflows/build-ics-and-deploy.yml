name: Build ICS and Deploy Pages

on:
  # daily at 09:15 UTC
  schedule:
    - cron: '15 9 * * *'
  workflow_dispatch: {}

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Install deps (single-line run, no block scalar)
      - run: bash -lc "python -m pip install --upgrade pip && if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install requests beautifulsoup4 lxml ics python-dateutil pytz pyyaml; fi"

      # Show sources (single-line)
      - run: bash -lc "echo 'Looking for sources.{yaml,yml}â€¦'; found=0; for p in sources.yaml sources.yml src/sources.yaml src/sources.yml; do [ -f \"$p\" ] && echo \" - found: $p\" && found=1; done; [ $found -eq 0 ] && echo '::warning::No sources.yaml/yml found at repo root or in src/.' || true"

      # Run builder
      - run: bash -lc "echo 'Running: python src/main.py'; TZ=America/Chicago python src/main.py; echo; echo 'Outputs at repo root:'; ls -la || true; if [ -d state ]; then echo 'state/ (top 200 files):'; find state -type f | sed -n '1,200p'; else echo '::warning::No state/ dir produced.'; fi; if [ -f src/northwoods.ics ] && [ ! -f northwoods.ics ]; then cp src/northwoods.ics northwoods.ics; fi; [ -f northwoods.ics ] && echo 'northwoods.ics present at repo root.' || echo '::warning::northwoods.ics not found.'"

      # Commit & push if changed
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bash -lc "git config user.name 'github-actions[bot]'; git config user.email 'github-actions[bot]@users.noreply.github.com'; git add -A; git diff --cached --quiet && echo 'No changes to commit.' || (git commit -m 'Daily update: ICS + state' && git push)"

      - uses: actions/configure-pages@v5

      # Build tiny public site (single-line)
      - run: bash -lc "rm -rf public && mkdir -p public && printf '%s\n' '<!doctype html>' '<meta charset=\"utf-8\">' '<title>Northwoods Events - Artifacts</title>' '<h1>Northwoods Events - Artifacts</h1>' '<p>This page lists useful generated files from the repo.</p>' '<ul>' '  <li><a href=\"state/\">state/ (snapshots, last_run_report.json)</a></li>' '  <li><a href=\"northwoods.ics\">northwoods.ics (if present)</a></li>' '</ul>' '<hr>' '<p>Auto-published by GitHub Pages workflow.</p>' > public/index.html; [ -d state ] && mkdir -p public/state && cp -a state/. public/state/ || true; [ -f northwoods.ics ] && cp northwoods.ics public/ || true; echo 'Public artifact contents (top):'; find public -maxdepth 3 -type f | sed -n '1,200p'"

      - uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - uses: actions/deploy-pages@v4
