name: Scrape, Build & Deploy

on:
  workflow_dispatch: {}
  schedule:
    - cron: "7 */3 * * *"  # every 3 hours at :07

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      USE_PLAYWRIGHT: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (debug)
        run: |
          echo "---- repo root ----"; ls -lah
          echo "---- src ----"; ls -lah src || true
          echo "---- state ----"; ls -lah state || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps and Playwright browser
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install --with-deps chromium

      - name: Ensure src is a package (avoids relative-import errors)
        run: |
          if [ ! -f src/__init__.py ]; then
            touch src/__init__.py
          fi

      - name: Run scraper
        run: |
          set -euo pipefail
          mkdir -p state/snapshots
          PRE_MTIME="0"
          if [ -f state/last_run_report.json ]; then
            PRE_MTIME="$(stat -c %Y state/last_run_report.json || echo 0)"
          fi
          python -m src.main < sources.yml || {
            echo "Scraper failed; will fall back later if needed."
          }
          if [ -f state/last_run_report.json ]; then
            POST_MTIME="$(stat -c %Y state/last_run_report.json || echo 0)"
            if [ "$POST_MTIME" -gt "$PRE_MTIME" ]; then
              echo "Scrape updated state/last_run_report.json"
            else
              echo "Scrape did not update state/last_run_report.json"
            fi
          else
            echo "state/last_run_report.json not found after scrape."
          fi

      - name: Quick report (debug)
        run: |
          if [ -f state/last_run_report.json ]; then
            python -c "import json; d=json.load(open('state/last_run_report.json','r',encoding='utf-8')); print('Sources:',len(d.get('sources',[]))); [print('-',s.get('name',''), 'parsed:',s.get('parsed',0),'added:',s.get('added',0)) for s in d.get('sources',[])[:10]]"
          else
            echo "No state/last_run_report.json to summarize."
          fi

      - name: Build static site
        run: |
          set -euo pipefail
          mkdir -p public/state public/ics
          # Prefer freshly scraped report, else fallback to repo root, else empty
          if [ -f state/last_run_report.json ]; then
            cp state/last_run_report.json public/state/last_run_report.json
          elif [ -f last_run_report.json ]; then
            cp last_run_report.json public/state/last_run_report.json
          else
            echo "{}" > public/state/last_run_report.json
          fi
          # Copy ICS files if present
          if [ -f northwoods.ics ]; then cp northwoods.ics public/ics/; fi
          if [ -f northwoods-events.ics ]; then cp northwoods-events.ics public/ics/; fi

          # Make a minimal index.html (no heredocs)
          BUILD_TIME="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          echo '<!doctype html>' > public/index.html
          echo '<meta charset="utf-8">' >> public/index.html
          echo '<meta name="viewport" content="width=device-width, initial-scale=1">' >> public/index.html
          echo '<title>Northwoods Events</title>' >> public/index.html
          echo '<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:2rem}table{border-collapse:collapse;width:100%}th,td{border:1px solid #ddd;padding:.5rem;text-align:left}th{background:#f6f8fa}code{background:#f6f8fa;padding:.1rem .3rem;border-radius:.25rem}</style>' >> public/index.html
          echo '<h1>Northwoods Events</h1>' >> public/index.html
          echo "<p>Built: <code>${BUILD_TIME}</code></p>" >> public/index.html
          echo '<p><a href="./state/last_run_report.json">Download last_run_report.json</a></p>' >> public/index.html
          echo '<p><a href="./ics/">ICS files</a> (if present)</p>' >> public/index.html

      - name: Show output tree (debug)
        run: |
          echo "---- public ----"; ls -lah public || true
          echo "---- public/state ----"; ls -lah public/state || true
          echo "---- public/ics ----"; ls -lah public/ics || true

      - name: Upload state as artifact (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: state-debug
          path: |
            state/**
            public/index.html
            public/state/last_run_report.json
            public/ics/**

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4
