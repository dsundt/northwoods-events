name: Scrape, Build & Deploy

on:
  workflow_dispatch: {}
  schedule:
    - cron: "7 */3 * * *"  # every 3 hours at :07

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - name: Show repo tree (pre)
        run: |
          echo "---- repo root ----"; ls -lah
          echo "---- src ----"; ls -lah src || true
          echo "---- state ----"; ls -lah state || true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps + Playwright (Chromium)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyyaml
          python -m playwright install --with-deps chromium

      - name: Convert sources.yml â†’ sources.json (no heredoc)
        run: |
          python -c "import json,yaml,io; d=yaml.safe_load(io.open('sources.yml','r',encoding='utf-8')); io.open('sources.json','w',encoding='utf-8').write(json.dumps(d,indent=2))"
          test -s sources.json

      - name: Scrape & parse (force stdin; no heredoc)
        env:
          USE_PLAYWRIGHT: "1"
        run: |
          set -euo pipefail
          mkdir -p state/snapshots
          cat sources.json | python src/main.py
          if [ -f state/last_run_report.json ]; then
            echo "Found report at state/last_run_report.json"
          elif [ -f last_run_report.json ]; then
            echo "Found report at repo root; moving into state/"
            mkdir -p state
            mv last_run_report.json state/last_run_report.json
          fi
          test -s state/last_run_report.json

      - name: Show report snippet (no heredoc)
        run: |
          python -c "import json; d=json.load(open('state/last_run_report.json','r',encoding='utf-8')); print('Sources:',len(d.get('sources',[]))); [print('-',s.get('name',''), 'parsed:',s.get('parsed',0),'added:',s.get('added',0)) for s in d.get('sources',[])[:5]]"

      - name: Build static site (no heredoc)
        run: |
          set -euo pipefail
          mkdir -p public/state public/ics
          cp state/last_run_report.json public/state/last_run_report.json
          for f in northwoods.ics northwoods-events.ics; do
            [ -f "$f" ] && cp "$f" public/ics/ || true
          done
          BUILD_TIME="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          : > public/index.html
          echo '<!doctype html>' >> public/index.html
          echo '<meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1">' >> public/index.html
          echo '<title>Northwoods Events</title>' >> public/index.html
          echo '<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:2rem}table{border-collapse:collapse;width:100%}th,td{border:1px solid #ddd;padding:.5rem;text-align:left}th{background:#f6f8fa}code{background:#f6f8fa;padding:.1rem .3rem;border-radius:.25rem}</style>' >> public/index.html
          echo '<h1>Northwoods Events</h1>' >> public/index.html
          echo "<p>Built: <code>${BUILD_TIME}</code></p>" >> public/index.html
          echo '<p><a href="./state/last_run_report.json">Download last_run_report.json</a></p>' >> public/index.html
          echo '<p><a href="./ics/">ICS files</a> (if present)</p>' >> public/index.html

      - name: Show output tree (post)
        run: |
          echo "---- public ----"; ls -lah public || true
          echo "---- public/state ----"; ls -lah public/state || true
          echo "---- public/ics ----"; ls -lah public/ics || true

      - uses: actions/configure-pages@v5

      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - id: deployment
        uses: actions/deploy-pages@v4
