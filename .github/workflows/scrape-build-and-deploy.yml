name: Scrape, Build & Deploy

on:
  workflow_dispatch: {}
  schedule:
    - cron: "7 */3 * * *"  # every 3 hours at :07

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps + Playwright (Chromium)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyyaml
          python -m playwright install --with-deps chromium

      - name: Convert sources.yml â†’ sources.json
        run: |
          python -c "import yaml, json, io; d=yaml.safe_load(io.open('sources.yml','r',encoding='utf-8')); json.dump(d, io.open('sources.json','w',encoding='utf-8'), indent=2); print('Wrote sources.json')"
          test -s sources.json

      - name: Scrape & parse
        env:
          USE_PLAYWRIGHT: "1"
        run: |
          set -euo pipefail
          mkdir -p state/snapshots
          # Run WITHOUT stdin so main.py can read sources.json
          python src/main.py
          # Normalize report location
          if [ -f state/last_run_report.json ]; then
            echo "Found report at state/last_run_report.json"
          elif [ -f last_run_report.json ]; then
            echo "Found report at repo root; moving into state/"
            mkdir -p state
            mv last_run_report.json state/last_run_report.json
          fi
          test -s state/last_run_report.json || (echo "ERROR: state/last_run_report.json not created" && exit 1)

      - name: Build static site
        run: |
          set -euo pipefail
          mkdir -p public/state public/ics
          cp state/last_run_report.json public/state/last_run_report.json || true
          for f in northwoods.ics northwoods-events.ics; do
            [ -f "$f" ] && cp "$f" public/ics/ || true
          done
          BUILD_TIME="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          {
            echo '<!doctype html>'
            echo '<meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1">'
            echo '<title>Northwoods Events</title>'
            echo '<style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:2rem}table{border-collapse:collapse;width:100%}th,td{border:1px solid #ddd;padding:.5rem;text-align:left}th{background:#f6f8fa}code{background:#f6f8fa;padding:.1rem .3rem;border-radius:.25rem}</style>'
            echo '<h1>Northwoods Events</h1>'
            echo "<p>Built: <code>${BUILD_TIME}</code></p>"
            echo '<p><a href="./state/last_run_report.json">Download last_run_report.json</a></p>'
            echo '<p><a href="./ics/">ICS files</a> (if present)</p>'
            echo '<div id="summary"></div>'
            echo '<script type="module">'
            echo 'async function main(){try{const r=await fetch("./state/last_run_report.json");const d=await r.json();const s=(d.sources||[]).slice(0,50);const rows=s.map(x=>`<tr><td>${x.name||""}</td><td>${x.parser_kind||""}</td><td>${x.parsed||0}</td><td>${x.added||0}</td></tr>`).join("");document.getElementById("summary").innerHTML=`<h2>Latest sources (sample)</h2><table><thead><tr><th>Name</th><th>Parser</th><th>Parsed</th><th>Added</th></tr></thead><tbody>${rows||"<tr><td colspan=4><em>No data</em></td></tr>"}</tbody></table>`}catch(e){document.getElementById("summary").textContent=String(e)}}main();'
            echo '</script>'
          } > public/index.html

      - name: Show output tree (debug)
        run: |
          echo "---- public ----"; ls -lah public || true
          echo "---- public/state ----"; ls -lah public/state || true
          echo "---- public/ics ----"; ls -lah public/ics || true

      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
      - id: deployment
        uses: actions/deploy-pages@v4
